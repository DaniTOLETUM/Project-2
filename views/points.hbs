<a class="btns" href="/logout">Logout</a>
<html>
<h2>Select Points to add in DB</h2>

<head>
  <title>Simple Click Events</title>
  <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
  <meta charset="utf-8">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.18.0/axios.min.js"></script>
</head>

<body>
  <nav id="nav_dashboard">
    <a href="/admin-panel/users" class="link">
      {{!-- <span class="btn icon" title="Manage user">
        <i class="fa fa-plus fa-lg"></i>
        <i class="fa fa-plus fa-user fa-lg"></i>
      </span>Users --}}
      Users
    </a>
    <a href="/admin-panel/points" class="link">
      {{!-- <span class="btn icon" title="Manage Points">
        <i class="fa fa-list fa-lg"></i>
        <i class="fa fa-users fa-lg"></i>
      </span> --}}
      Points
    </a>
    <a href="/admin-panel/points_manage" class="link">
      {{!-- <span class="btn icon" title="Manage Points">
        <i class="fa fa-list fa-lg"></i>
        <i class="fa fa-users fa-lg"></i>
      </span> --}}
      Points Management
    </a>
    <a href="/admin-panel/routes" class="link">
      {{!-- <span class="btn icon" title="Manage Routes">
        <i class="fa fa-plus fa-lg"></i>
        <i class="fab fa-product-hunt fa-lg"></i>
      </span> --}}
      Routes
    </a>

  </nav>
  <div id="map"></div>
  <script>
    function initMap() {
      var myLatlng = { lat: 48.8606, lng: 2.3376 };
      var map = new google.maps.Map(document.getElementById("map"), {
        zoom: 13,
        center: myLatlng
      });
      var marker = new google.maps.Marker({
        position: myLatlng,
        map: map,
        title: 'Click to zoom'
      });
      map.addListener('center_changed', function () {
        // 5 seconds after the center of the map has changed, pan back to the
        // marker.
        window.setTimeout(function () {
          var getPoint = map.panTo(marker.getPosition());
          console.log(map.panTo(marker.getPosition()));
          map.panTo(marker.getPosition());
        }, 500000);
      });
      marker.addListener('click', function () {
        map.setZoom(17);
        map.setCenter(marker.getPosition());
      });
      var clickHandler = new ClickEventHandler(map, origin);
      var geocoder = new google.maps.Geocoder;
      var infowindow = new google.maps.InfoWindow;
    }

    /**
* @constructor
*/
    var ClickEventHandler = function (map, origin) {
      this.origin = origin;
      this.map = map;
      this.directionsService = new google.maps.DirectionsService;
      this.directionsDisplay = new google.maps.DirectionsRenderer;
      this.directionsDisplay.setMap(map);
      this.placesService = new google.maps.places.PlacesService(map);
      this.infowindow = new google.maps.InfoWindow;
      this.infowindowContent = document.getElementById('infowindow-content');
      this.infowindow.setContent(this.infowindowContent);
      // Listen for clicks on the map.
      this.map.addListener('click', this.handleClick.bind(this));
    };

    ClickEventHandler.prototype.handleClick = function (event) {
      console.log("this place id", event.placeId, event);
      // If the event has a placeId, use it.
      idPlace = event.placeId;
      if (event.placeId) {
        console.log('You clicked on place:');
        console.log(event);

        console.log("this is the place ID");
        // Calling e.stop() on the event prevents the default info window from
        // showing.
        // If you call stop here when there is no placeId you will prevent some
        // other map click event handlers from receiving the event.
        event.stop();

        this.getPlaceInformation(event.placeId, function (placeDetails) {
          console.log("status ok Ä±n ", map)
          console.log("map", placeDetails)
          var latLng = {
            lat: placeDetails.geometry.location.lat(),
            lng: placeDetails.geometry.location.lng()
          };
          console.log("there are our coordenates ", latLng)
          //latLng = JSON.stringify(latLng); 

          const { place_id, name, rating, types, website, address_components, } = placeDetails;
          const answer = window.prompt("save in db ? (y/n)")
          if (answer === "y") sendToServer({ place_id, name, rating, types, website, address_components, latLng });
        });
      }
    };

    ClickEventHandler.prototype.getPlaceInformation = function (placeId, clbk) {
      this.placesService.getDetails({ placeId: placeId }, function (place, status) {
        if (status === google.maps.places.PlacesServiceStatus.OK) clbk(place);
        else console.log("no good friend: failed to get place details")
      });
    };

    function sendToServer(placeData) {
      axios.post("/create-point", { placeData })
        .then(serverResponse => {
          console.log(serverResponse)
        })
        .catch(serverError => {

        })
    }

    console.log(" the valueeeee ")
  </script>
  <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCIbJUg6J8QqqQuMI899bZdrtum8VAZnSc&libraries=places&callback=initMap">
  </script>
</body>

</html>